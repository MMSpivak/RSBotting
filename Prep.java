package RSBot;

import org.osbot.rs07.api.ui.RS2Widget;
import org.osbot.rs07.api.model.Entity;
import org.osbot.rs07.api.model.GroundItem;
import org.osbot.rs07.api.model.NPC;
import org.osbot.rs07.api.model.RS2Object;
import org.osbot.rs07.api.map.Position;
import org.osbot.rs07.api.map.constants.Banks;
import org.osbot.rs07.api.map.Area;
import org.osbot.rs07.api.Quests;
import org.osbot.rs07.script.ScriptManifest;
import org.osbot.rs07.script.Script;

@ScriptManifest(author = "Boomerwangs", name = "Prep", info = "Walking to Lumby", version = 0.1, logo = "")
public class Prep extends Script
{
    public void onStart() {
        this.log("Starting!");
    }
    
    public int onLoop() throws InterruptedException {
        if (!this.getQuests().isComplete(Quests.Quest.COOKS_ASSISTANT)) {
            this.walking.webWalk(new Area[] { Banks.LUMBRIDGE_UPPER });
            this.getBank().open();
            this.getBank().depositAll();
            this.getBank().close();
            final Position bank1 = new Position(3205, 3225, 2);
            final Position bank2 = new Position(3206, 3229, 2);
            this.getWalking().walk(bank1);
            this.getWalking().walk(bank2);
            ((RS2Object)this.objects.closest(new String[] { "Staircase" })).interact(new String[] { "Climb-down" });
            sleep((long)random(1500, 5000));
            ((RS2Object)this.objects.closest(new String[] { "Staircase" })).interact(new String[] { "Climb-down" });
            sleep((long)random(9500, 11500));
            final Position cook1 = new Position(3211, 3288, 0);
            final Position cook2 = new Position(3215, 3220, 0);
            final Position cook3 = new Position(3213, 3212, 0);
            final Position cook4 = new Position(3213, 3212, 0);
            final Position cook5 = new Position(3207, 3213, 0);
            this.getWalking().walk(cook1);
            sleep((long)random(9500, 11500));
            this.getWalking().walk(cook2);
            sleep((long)random(4000, 6500));
            this.getWalking().walk(cook3);
            sleep((long)random(9500, 11500));
            this.getWalking().walk(cook4);
            sleep((long)random(9500, 11500));
            this.getWalking().walk(cook5);
            sleep((long)random(800, 1400));
            final NPC npc = (NPC)this.npcs.closest(new String[] { "Cook" });
            this.npcs.closest(new String[] { "Cook" });
            npc.interact(new String[] { "Talk-to" });
            sleep((long)random(1500, 2000));
            this.getDialogues().clickContinue();
            sleep((long)random(1000, 2500));
            this.getDialogues().selectOption(1);
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(1000, 2500));
            this.getDialogues().selectOption(1);
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(2000, 3400));
            final GroundItem pot = (GroundItem)this.getGroundItems().closest(new String[] { "Pot" });
            pot.interact(new String[] { "Take" });
            sleep((long)random(1000, 3000));
            final Position wheat1 = new Position(3161, 3292, 0);
            this.walking.webWalk(new Position[] { wheat1 });
            sleep((long)random(2000, 3400));
            final RS2Object wheat2 = (RS2Object)this.getObjects().closest(new String[] { "Wheat" });
            wheat2.interact(new String[] { "Pick" });
            sleep((long)random(3000, 6000));
            final Position wheat3 = new Position(3167, 3305, 0);
            this.walking.webWalk(new Position[] { wheat3 });
            sleep((long)random(1000, 2000));
            final RS2Object ladder = (RS2Object)this.objects.closest(new String[] { "Ladder" });
            ladder.interact(new String[] { "Climb-up" });
            sleep((long)random(5000, 6000));
            final RS2Object ladder2 = (RS2Object)this.objects.closest(new String[] { "Ladder" });
            ladder2.interact(new String[] { "Climb-up" });
            sleep((long)random(5000, 6000));
            final Position wheat4 = new Position(3166, 3308, 2);
            this.walking.webWalk(new Position[] { wheat4 });
            sleep((long)random(1000, 3000));
            this.getInventory().interact("Use", new String[] { "Grain" });
            sleep((long)random(1000, 3000));
            final RS2Object hopper1 = (RS2Object)this.objects.closest(new String[] { "Hopper" });
            hopper1.interact(new String[] { "Use" });
            sleep((long)random(6000, 7000));
            final Position wheat5 = new Position(3165, 3305, 2);
            this.walking.webWalk(new Position[] { wheat5 });
            sleep((long)random(450, 924));
            final RS2Object controls = (RS2Object)this.objects.closest(new String[] { "Hopper controls" });
            controls.interact(new String[] { "Operate" });
            sleep((long)random(3000, 4000));
            final Position wheat6 = new Position(3165, 3306, 0);
            this.walking.webWalk(new Position[] { wheat6 });
            sleep((long)random(600, 800));
            final RS2Object flourBin = (RS2Object)this.objects.closest(new String[] { "Flour bin" });
            this.getInventory().interact("Use", new String[] { "Pot" });
            sleep((long)random(1000, 2000));
            flourBin.interact(new String[] { "Use" });
            sleep((long)random(2000, 3000));
            final Position egg1 = new Position(3230, 3299, 0);
            this.walking.webWalk(new Position[] { egg1 });
            sleep((long)random(1000, 2000));
            final GroundItem eggg = (GroundItem)this.getGroundItems().closest(new String[] { "Egg" });
            eggg.interact(new String[] { "Take" });
            sleep((long)random(3000, 7300));
            final Position bucket1 = new Position(3228, 3293, 0);
            this.walking.webWalk(new Position[] { bucket1 });
            sleep((long)random(4000, 5500));
            final GroundItem bucket2 = (GroundItem)this.getGroundItems().closest(new String[] { "Bucket" });
            bucket2.interact(new String[] { "Take" });
            sleep((long)random(4000, 7000));
            final Position cow1 = new Position(3171, 3319, 0);
            this.walking.webWalk(new Position[] { cow1 });
            sleep((long)random(3000, 5678));
            final RS2Object cow2 = (RS2Object)this.getObjects().closest(new String[] { "Dairy cow" });
            cow2.interact(new String[] { "Milk" });
            sleep((long)random(6400, 9873));
            final Position finish1 = new Position(3208, 3213, 0);
            final Position finish2 = new Position(3207, 3216, 0);
            this.walking.webWalk(new Position[] { finish1 });
            sleep((long)random(1000, 2400));
            this.getWalking().walk(finish2);
            sleep((long)random(2000, 6000));
            final NPC cook6 = (NPC)this.getNpcs().closest(new String[] { "Cook" });
            cook6.interact(new String[] { "Talk-to" });
            sleep((long)random(4500, 5400));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
        }
        if (!this.getQuests().isComplete(Quests.Quest.SHEEP_SHEARER)) {
            final Position sheep1 = new Position(3189, 3274, 0);
            this.walking.webWalk(new Position[] { sheep1 });
            sleep((long)random(3400, 5000));
            final NPC npc2 = (NPC)this.npcs.closest(new String[] { "Fred the Farmer" });
            this.npcs.closest(new String[] { "Fred the Farmer" });
            npc2.interact(new String[] { "Talk-to" });
            sleep((long)random(1000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(1);
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(1);
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            final Position sheep2 = new Position(3211, 3263, 0);
            this.walking.webWalk(new Position[] { sheep2 });
            while (this.getInventory().getAmount(new String[] { "Wool" }) < 20L) {
                final NPC sheepMob1 = (NPC)this.getNpcs().closest(new String[] { "Sheep" });
                if (sheepMob1.hasAction(new String[] { "Shear" }) && this.getMap().canReach((Entity)sheepMob1)) {
                    this.getCamera().toEntity((Entity)sheepMob1);
                    sheepMob1.interact(new String[] { "Shear" });
                    sleep((long)random(4000, 8000));
                }
                else {
                    final Position sheepwalk1 = new Position(3201, 3266, 0);
                    this.walking.webWalk(new Position[] { sheepwalk1 });
                    sleep((long)random(2000, 3000));
                    final NPC sheepMob2 = (NPC)this.getNpcs().closest(new String[] { "Sheep" });
                    if (sheepMob2.hasAction(new String[] { "Shear" }) && this.getMap().canReach((Entity)sheepMob2)) {
                        this.getCamera().toEntity((Entity)sheepMob2);
                        sheepMob2.interact(new String[] { "Shear" });
                        sleep((long)random(4000, 8000));
                    }
                    else {
                        final Position sheepwalk2 = new Position(3197, 3266, 0);
                        this.walking.webWalk(new Position[] { sheepwalk2 });
                        sleep((long)random(2000, 3000));
                        final NPC sheepMob3 = (NPC)this.getNpcs().closest(new String[] { "Sheep" });
                        if (sheepMob3.hasAction(new String[] { "Shear" }) && this.getMap().canReach((Entity)sheepMob3)) {
                            this.getCamera().toEntity((Entity)sheepMob3);
                            sheepMob3.interact(new String[] { "Shear" });
                            sleep((long)random(4000, 8000));
                        }
                        else {
                            final Position sheepwalk3 = new Position(3204, 3271, 0);
                            this.walking.webWalk(new Position[] { sheepwalk3 });
                            sleep((long)random(2000, 3000));
                            final NPC sheepMob4 = (NPC)this.getNpcs().closest(new String[] { "Sheep" });
                            if (sheepMob4.hasAction(new String[] { "Shear" }) && this.getMap().canReach((Entity)sheepMob4)) {
                                this.getCamera().toEntity((Entity)sheepMob4);
                                sheepMob4.interact(new String[] { "Shear" });
                                sleep((long)random(4000, 8000));
                            }
                            else {
                                sleep((long)random(3000, 4000));
                            }
                        }
                    }
                }
            }
            final Position wool1 = new Position(3209, 3213, 1);
            this.walking.webWalk(new Position[] { wool1 });
            sleep((long)random(2000, 4000));
            final RS2Object spinwheel = (RS2Object)this.objects.closest(new String[] { "Spinning Wheel" });
            this.getInventory().interact("Use", new String[] { "Wool" });
            spinwheel.interact(new String[] { "Use" });
            sleep((long)random(2500, 4500));
            final RS2Widget woolMenu = this.widgets.get(270, 14);
            woolMenu.interact(new String[] { "Make" });
            sleep((long)random(500, 1000));
            sleep((long)random(45000, 55000));
            final Position farmer1 = new Position(3189, 3247, 0);
            this.walking.webWalk(new Position[] { farmer1 });
            final NPC ffarmer = (NPC)this.npcs.closest(new String[] { "Fred the Farmer" });
            this.npcs.closest(new String[] { "Fred the Farmer" });
            ffarmer.interact(new String[] { "Talk-to" });
            sleep((long)random(1000, 2000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(1);
            sleep((long)random(1000, 2500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
        }
        if (!this.getQuests().isComplete(Quests.Quest.ROMEO_JULIET)) {
            final Position RJ1 = new Position(3157, 3426, 1);
            this.walking.webWalk(new Position[] { RJ1 });
            final NPC juliet = (NPC)this.npcs.closest(new String[] { "Juliet" });
            juliet.interact(new String[] { "Talk-to" });
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(1);
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(1);
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            final Position romeo1 = new Position(3208, 3425, 0);
            this.walking.webWalk(new Position[] { romeo1 });
            sleep((long)random(2500, 3500));
            final NPC romeo2 = (NPC)this.npcs.closest(new String[] { "Romeo" });
            romeo2.interact(new String[] { "Talk-to" });
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(4);
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            final Position father1 = new Position(3255, 3482, 0);
            this.walking.webWalk(new Position[] { father1 });
            sleep((long)random(2000, 4000));
            final NPC fatherLawrence = (NPC)this.npcs.closest(new String[] { "Father Lawrence" });
            fatherLawrence.interact(new String[] { "Talk-to" });
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(8000, 10000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            final Position berry1 = new Position(3298, 3381, 0);
            this.walking.webWalk(new Position[] { berry1 });
            sleep((long)random(1000, 2000));
            final Position berry2 = new Position(3292, 3355, 0);
            this.walking.webWalk(new Position[] { berry2 });
            sleep((long)random(1000, 2000));
            final Position berry3 = new Position(3268, 3368, 0);
            this.walking.webWalk(new Position[] { berry3 });
            sleep((long)random(1000, 2000));
            ((RS2Object)this.objects.closest(new String[] { "Cadava bush" })).interact(new String[] { "Pick-from" });
            sleep((long)random(5000, 7000));
            final Position apot = new Position(3196, 3404, 0);
            this.walking.webWalk(new Position[] { apot });
            sleep((long)random(2000, 3000));
            final NPC apothecary = (NPC)this.npcs.closest(new String[] { "Apothecary" });
            apothecary.interact(new String[] { "Talk-to" });
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(2);
            sleep((long)random(2400, 3500));
            this.getDialogues().selectOption(1);
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            final Position juliet2 = new Position(3157, 3426, 1);
            this.walking.webWalk(new Position[] { juliet2 });
            sleep((long)random(2000, 3000));
            final NPC jjuliet = (NPC)this.npcs.closest(new String[] { "Juliet" });
            jjuliet.interact(new String[] { "Talk-to" });
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(1000, 2000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(1000, 2000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(1000, 2000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(1000, 2000));
            final Position romeo3 = new Position(3208, 3428, 0);
            this.walking.webWalk(new Position[] { romeo3 });
            sleep((long)random(2000, 4000));
            final NPC rromeo = (NPC)this.npcs.closest(new String[] { "Romeo" });
            rromeo.interact(new String[] { "Talk-to" });
            sleep((long)random(2000, 3000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(3000, 4000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(8000, 10000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(8000, 10000));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            this.getDialogues().clickContinue();
            sleep((long)random(2400, 3500));
            sleep((long)random(3000, 4000));
        }
        return 500;
    }
    
    public void onExit() {
    }
}